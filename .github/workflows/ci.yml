name: remote ssh build
on: [push]

jobs:
  lint:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # https://github.com/marketplace/actions/build-push-and-release-a-docker-container-to-heroku
    - name: Build, Push and Release a Docker container to Heroku. # Your custom step name
      uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
      with:
        # Below you must provide variables for your Heroku app.

        # The email address associated with your Heroku account.
        # If you don't want to use repository secrets (which is recommended) you can do:
        # email: my.email@example.com
        email: ${{ secrets.HEROKU_EMAIL }}

        # Heroku API key associated with provided user's email.
        # Api Key is available under your Heroku account settings.
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}

        # Name of the heroku application to which the build is to be sent.
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

        # (Optional, default: "./")
        # Dockerfile directory.
        # For example, if you have a Dockerfile in the root of your project, leave it as follows:
        dockerfile_directory: ./

        # (Optional, default: "Dockerfile")
        # Dockerfile name.
        dockerfile_name: Dockerfile
        # (Optional, default: "")
        # Additional options of docker build command.
        docker_options: "--no-cache"

        # (Optional, default: "web")
        # Select the process type for which you want the docker container to be uploaded.
        # By default, this argument is set to "web".
        # For more information look at https://devcenter.heroku.com/articles/process-model
        process_type: web

#  docker:
#    runs-on: ubuntu-latest
#    steps:
#
#      -
#        name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          push: true
#          tags: user/app:latest

# Temporarily commented due to WIP API
#    - name: executing remote ssh commands using password
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.HOST }}
#        username: ${{ secrets.USERNAME }}
#        key: ${{ secrets.SSH_SECRET_KEY }}
#        script: |
#          sudo docker pull timot3/uiuc-classes
#          sudo docker stop classbot
#          sudo docker run -itd -e CLASSBOT_TOKEN=${{ secrets.BOT_TOKEN }} --rm --name classbot timot3/uiuc-classes